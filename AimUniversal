local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\202\143","\168\228\161\96\217\95\81"),function(v42) if (v9(v42,3 -1 )==81) then v30=v8(v11(v42,1,1));return "";else local v103=v10(v8(v42,16));if v30 then local v110=0;local v111;while true do if (v110==1) then return v111;end if (0==v110) then v111=v13(v103,v30);v30=nil;v110=1;end end else return v103;end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/((1082 -(1020 + 60))^(v44-(1424 -(630 + 793)))))%(2^(((v45-1) -(v44-1)) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (v106==0) then v107=2^(v44-(3 -2)) ;return (((v43%(v107 + v107))>=v107) and 1) or (0 -0) ;end end end end local function v32() local v46=0;local v47;while true do if (0==v46) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==1) then return (v50 * 256) + v49 ;end if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + 2 + 2 ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35() local v56=v34();local v57=v34();local v58=2 -1 ;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==(2 -1)) and  -1) or (3 -2) ;if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1748 -(760 + 987) ;v58=0 -0 ;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/(1913 -(1789 + 124))))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=1, #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v80=1,v69 do local v81=v32();local v82;if (v81==1) then v82=v32()~=0 ;elseif (v81==2) then v82=v35();elseif (v81==3) then v82=v36();end v70[v80]=v82;end v68[3]=v32();for v84=1,v34() do local v85=0;local v86;while true do if (v85==0) then v86=v32();if (v31(v86,1,1)==(766 -(745 + 21))) then local v118=0;local v119;local v120;local v121;while true do if (3==v118) then if (v31(v120,3,3)==1) then v121[4]=v70[v121[4]];end v65[v84]=v121;break;end if (v118==0) then v119=v31(v86,621 -(555 + 64) ,3);v120=v31(v86,4,937 -(857 + 74) );v118=1;end if (v118==2) then if (v31(v120,1,1)==1) then v121[1057 -(87 + 968) ]=v70[v121[2]];end if (v31(v120,2,2)==1) then v121[1 + 2 ]=v70[v121[3]];end v118=3;end if (v118==1) then v121={v33(),v33(),nil,nil};if (v119==0) then local v129=0;while true do if (v129==0) then v121[3]=v33();v121[10 -6 ]=v33();break;end end elseif (v119==1) then v121[11 -8 ]=v34();elseif (v119==2) then v121[3]=v34() -((1 + 1)^16) ;elseif (v119==(3 + 0)) then local v134=0;while true do if (v134==0) then v121[3]=v34() -(2^(584 -(367 + 201))) ;v121[931 -(214 + 713) ]=v33();break;end end end v118=2;end end end break;end end end for v87=1,v34() do v66[v87-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[13 -10 ];return function(...) local v89=v75;local v90=v76;local v91=v77;local v92=v38;local v93=1;local v94= -1;local v95={};local v96={...};local v97=v20("#",...) -1 ;local v98={};local v99={};for v108=0,v97 do if (v108>=v91) then v95[v108-v91 ]=v96[v108 + 1 ];else v99[v108]=v96[v108 + 1 + 0 ];end end local v100=(v97-v91) + 1 ;local v101;local v102;while true do local v109=0;while true do if (v109==0) then v101=v89[v93];v102=v101[1];v109=1;end if (v109==1) then if (v102<=(124 -69)) then if (v102<=27) then if (v102<=(890 -(282 + 595))) then if (v102<=6) then if (v102<=2) then if (v102<=(1413 -(447 + 966))) then local v135=0;local v136;local v137;local v138;local v139;while true do if (v135==2) then for v399=v136,v94 do v139=v139 + 1 ;v99[v399]=v137[v139];end break;end if (v135==0) then v136=v101[2];v137,v138=v92(v99[v136](v21(v99,v136 + 1 ,v101[3])));v135=1;end if (1==v135) then v94=(v138 + v136) -1 ;v139=0;v135=2;end end elseif (v102>(1638 -(1523 + 114))) then v99[v101[2 + 0 ]]=v99[v101[3]];elseif (v99[v101[2]]~=v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102<=4) then if (v102>3) then do return v99[v101[2]];end else v99[v101[2 -0 ]][v101[3]]=v99[v101[4]];end elseif (v102>5) then v99[v101[1067 -(68 + 997) ]]= not v99[v101[3]];else v99[v101[703 -(376 + 325) ]]=v99[v101[3]]%v101[4] ;end elseif (v102<=9) then if (v102<=7) then v99[v101[2]]=v99[v101[3]]%v101[4] ;elseif (v102>8) then local v169=v101[2];local v170=v101[4];local v171=v169 + 2 ;local v172={v99[v169](v99[v169 + 1 ],v99[v171])};for v344=1,v170 do v99[v171 + v344 ]=v172[v344];end local v173=v172[1];if v173 then v99[v171]=v173;v93=v101[3];else v93=v93 + 1 ;end else local v174=0;local v175;local v176;while true do if (v174==0) then v175=v101[2];v176={};v174=1;end if (v174==1) then for v464=1 -0 , #v98 do local v465=0;local v466;while true do if (v465==0) then v466=v98[v464];for v521=0, #v466 do local v522=v466[v521];local v523=v522[1271 -(226 + 1044) ];local v524=v522[2];if ((v523==v99) and (v524>=v175)) then local v525=0;while true do if (0==v525) then v176[v524]=v523[v524];v522[4 -3 ]=v176;break;end end end end break;end end end break;end end end elseif (v102<=11) then if (v102>(127 -(32 + 85))) then local v177=v101[2];local v178=v101[4];local v179=v177 + 2 ;local v180={v99[v177](v99[v177 + 1 ],v99[v179])};for v347=1,v178 do v99[v179 + v347 ]=v180[v347];end local v181=v180[1];if v181 then v99[v179]=v181;v93=v101[3];else v93=v93 + 1 ;end else v99[v101[2]][v101[1 + 2 ]]=v101[4];end elseif (v102==12) then local v184=0;local v185;while true do if (v184==0) then v185=v101[2];v99[v185]=v99[v185]();break;end end else v99[v101[1 + 1 ]]=v73[v101[6 -3 ]];end elseif (v102<=20) then if (v102<=16) then if (v102<=14) then if (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==15) then v99[v101[2]][v101[960 -(892 + 65) ]]=v101[9 -5 ];else local v191=v101[2];local v192={v99[v191](v21(v99,v191 + 1 ,v94))};local v193=0 -0 ;for v350=v191,v101[4] do local v351=0;while true do if (v351==0) then v193=v193 + 1 ;v99[v350]=v192[v193];break;end end end end elseif (v102<=18) then if (v102==17) then v99[v101[2]]=v74[v101[3]];else local v196=0;local v197;local v198;while true do if (v196==1) then for v469=v197 + 1 ,v101[3] do v15(v198,v99[v469]);end break;end if (v196==0) then v197=v101[2];v198=v99[v197];v196=1;end end end elseif (v102==19) then local v199=0;local v200;local v201;while true do if (v199==1) then for v470=v200 + 1 ,v94 do v15(v201,v99[v470]);end break;end if (0==v199) then v200=v101[16 -(9 + 5) ];v201=v99[v200];v199=1;end end else do return;end end elseif (v102<=23) then if (v102<=21) then v99[v101[3 -1 ]]=v99[v101[3]][v99[v101[4]]];elseif (v102>22) then v99[v101[2]]=v99[v101[3]] -v99[v101[4]] ;else v99[v101[2]]=v40(v90[v101[379 -(85 + 291) ]],nil,v74);end elseif (v102<=25) then if (v102==24) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v101[2]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==26) then local v204=0;local v205;local v206;local v207;while true do if (v204==0) then v205=v101[2];v206=v99[v205];v204=1;end if (v204==1) then v207=v99[v205 + 2 ];if (v207>0) then if (v206>v99[v205 + 1 ]) then v93=v101[3];else v99[v205 + 3 ]=v206;end elseif (v206<v99[v205 + 1 ]) then v93=v101[3];else v99[v205 + 3 ]=v206;end break;end end else local v208=v101[2];do return v21(v99,v208,v94);end end elseif (v102<=41) then if (v102<=34) then if (v102<=30) then if (v102<=(1293 -(243 + 1022))) then v99[v101[2]]=v101[3] + v99[v101[4]] ;elseif (v102==29) then v99[v101[2]][v99[v101[3]]]=v99[v101[354 -(87 + 263) ]];else v99[v101[2]][v101[3]]=v99[v101[4]];end elseif (v102<=(212 -(67 + 113))) then if (v102>31) then if v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else local v213=v101[7 -5 ];local v214=v99[v101[3]];v99[v213 + 1 ]=v214;v99[v213]=v214[v101[3 + 1 ]];end elseif (v102>33) then v99[v101[2]]=v99[v101[3]] + v101[4] ;else local v219=v101[4 -2 ];local v220,v221=v92(v99[v219](v99[v219 + 1 ]));v94=(v221 + v219) -1 ;local v222=0;for v352=v219,v94 do v222=v222 + 1 + 0 ;v99[v352]=v220[v222];end end elseif (v102<=37) then if (v102<=(139 -104)) then if v99[v101[2]] then v93=v93 + (953 -(802 + 150)) ;else v93=v101[3];end elseif (v102==36) then local v224=v90[v101[3]];local v225;local v226={};v225=v18({},{[v7("\228\238\39\82\43\82\195","\55\187\177\78\60\79")]=function(v355,v356) local v357=0;local v358;while true do if (v357==0) then v358=v226[v356];return v358[1][v358[2]];end end end,[v7("\18\241\81\238\81\198\142\41\203\71","\224\77\174\63\139\38\175")]=function(v359,v360,v361) local v362=0;local v363;while true do if (v362==0) then v363=v226[v360];v363[1][v363[2 + 0 ]]=v361;break;end end end});for v364=1,v101[10 -6 ] do local v365=0;local v366;while true do if (v365==1) then if (v366[1]==(195 -87)) then v226[v364-1 ]={v99,v366[3]};else v226[v364-1 ]={v73,v366[3]};end v98[ #v98 + 1 ]=v226;break;end if (v365==0) then v93=v93 + 1 ;v366=v89[v93];v365=1;end end end v99[v101[2]]=v40(v224,v225,v74);else local v228=0;local v229;local v230;local v231;local v232;while true do if (v228==0) then v229=v101[2];v230,v231=v92(v99[v229](v21(v99,v229 + 1 ,v101[3])));v228=1;end if (v228==2) then for v476=v229,v94 do local v477=0;while true do if (v477==0) then v232=v232 + 1 ;v99[v476]=v230[v232];break;end end end break;end if (1==v228) then v94=(v231 + v229) -(1 + 0) ;v232=0;v228=2;end end end elseif (v102<=39) then if (v102==38) then v99[v101[2]]=v101[3];else v73[v101[3 + 0 ]]=v99[v101[2]];end elseif (v102==40) then local v237=v90[v101[3]];local v238;local v239={};v238=v18({},{[v7("\187\126\81\32\128\68\64","\78\228\33\56")]=function(v367,v368) local v369=0;local v370;while true do if (v369==0) then v370=v239[v368];return v370[998 -(915 + 82) ][v370[6 -4 ]];end end end,[v7("\241\65\188\6\146\199\112\182\6\157","\229\174\30\210\99")]=function(v371,v372,v373) local v374=0;local v375;while true do if (v374==0) then v375=v239[v372];v375[1][v375[5 -3 ]]=v373;break;end end end});for v376=1,v101[4] do local v377=0;local v378;while true do if (v377==0) then v93=v93 + (1 -0) ;v378=v89[v93];v377=1;end if (v377==1) then if (v378[1]==(63 + 45)) then v239[v376-1 ]={v99,v378[3]};else v239[v376-1 ]={v73,v378[3]};end v98[ #v98 + 1 ]=v239;break;end end end v99[v101[1 + 1 ]]=v40(v237,v238,v74);else for v379=v101[2],v101[3] do v99[v379]=nil;end end elseif (v102<=48) then if (v102<=(60 -16)) then if (v102<=42) then do return;end elseif (v102>43) then local v241=v101[2];v99[v241]=v99[v241](v99[v241 + 1 ]);else v99[v101[2]]={};end elseif (v102<=46) then if (v102>45) then v99[v101[2 + 0 ]]= #v99[v101[3]];else v99[v101[2]]= not v99[v101[3]];end elseif (v102>(1521 -(1329 + 145))) then v99[v101[2]]=v101[3] + v99[v101[4]] ;else v99[v101[2]]={};end elseif (v102<=51) then if (v102<=49) then v99[v101[2]]=v101[3]~=0 ;elseif (v102>50) then local v248=v101[2 -0 ];local v249,v250=v92(v99[v248](v21(v99,v248 + 1 ,v94)));v94=(v250 + v248) -1 ;local v251=0;for v381=v248,v94 do local v382=0;while true do if (v382==0) then v251=v251 + 1 ;v99[v381]=v249[v251];break;end end end else v99[v101[2]]=v99[v101[3]] + v101[4] ;end elseif (v102<=(1903 -(1409 + 441))) then if (v102==52) then local v253=0;local v254;while true do if (0==v253) then v254=v101[2];do return v21(v99,v254,v254 + v101[1190 -(1069 + 118) ] );end break;end end else local v255=0;local v256;local v257;while true do if (1==v255) then for v485=v256 + 1 ,v101[4] do v257=v257   .. v99[v485] ;end v99[v101[1 + 1 ]]=v257;break;end if (v255==0) then v256=v101[721 -(15 + 703) ];v257=v99[v256];v255=1;end end end elseif (v102>54) then v99[v101[2]]=v99[v101[6 -3 ]]%v99[v101[4]] ;else v99[v101[2]]= #v99[v101[3]];end elseif (v102<=83) then if (v102<=69) then if (v102<=62) then if (v102<=(496 -(262 + 176))) then if (v102<=(1777 -(345 + 1376))) then v99[v101[2]]=v99[v101[3]][v99[v101[4]]];elseif (v102==57) then v99[v101[2]]=v74[v101[3]];else local v262=0;local v263;while true do if (v262==0) then v263=v101[2];v99[v263](v21(v99,v263 + 1 ,v94));break;end end end elseif (v102<=60) then if (v102>59) then v99[v101[3 -1 ]]=v99[v101[3]]/v101[4] ;else local v265=v101[2];local v266={};for v383=4 -3 , #v98 do local v384=v98[v383];for v410=0, #v384 do local v411=v384[v410];local v412=v411[1];local v413=v411[2];if ((v412==v99) and (v413>=v265)) then local v486=0;while true do if (v486==0) then v266[v413]=v412[v413];v411[1 + 0 ]=v266;break;end end end end end end elseif (v102==61) then v99[v101[2]]=v101[3]~=0 ;else local v268=0;local v269;local v270;local v271;while true do if (1==v268) then v271=v99[v269 + 2 ];if (v271>0) then if (v270>v99[v269 + 1 ]) then v93=v101[3];else v99[v269 + 3 ]=v270;end elseif (v270<v99[v269 + 1 ]) then v93=v101[3];else v99[v269 + 3 ]=v270;end break;end if (v268==0) then v269=v101[2];v270=v99[v269];v268=1;end end end elseif (v102<=(115 -50)) then if (v102<=63) then v99[v101[2]]=v101[6 -3 ];elseif (v102==(1270 -(696 + 510))) then local v272=0;local v273;while true do if (v272==0) then v273=v101[2];v99[v273](v21(v99,v273 + 1 ,v101[3]));break;end end elseif (v99[v101[2]]==v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[3 + 0 ];end elseif (v102<=67) then if (v102>66) then if  not v99[v101[2]] then v93=v93 + (792 -(368 + 423)) ;else v93=v101[3];end else v73[v101[3]]=v99[v101[2]];end elseif (v102>68) then v93=v101[3];else v99[v101[2]]=v99[v101[3]] -v99[v101[4]] ;end elseif (v102<=(238 -162)) then if (v102<=72) then if (v102<=70) then if (v99[v101[3 -1 ]]==v99[v101[22 -(10 + 8) ]]) then v93=v93 + 1 ;else v93=v101[1265 -(1091 + 171) ];end elseif (v102>(12 + 59)) then local v279=0;local v280;while true do if (v279==0) then v280=v101[2];v99[v280]=v99[v280](v21(v99,v280 + 1 ,v101[11 -8 ]));break;end end else v99[v101[2]][v99[v101[3]]]=v99[v101[4]];end elseif (v102<=74) then if (v102==(241 -168)) then local v283=v101[2];local v284,v285=v92(v99[v283](v21(v99,v283 + 1 ,v94)));v94=(v285 + v283) -1 ;local v286=374 -(123 + 251) ;for v385=v283,v94 do local v386=0;while true do if (0==v386) then v286=v286 + (443 -(416 + 26)) ;v99[v385]=v284[v286];break;end end end else do return v99[v101[2]];end end elseif (v102==75) then v99[v101[700 -(208 + 490) ]]=v73[v101[9 -6 ]];elseif (v99[v101[2]]<v99[v101[4]]) then v93=v93 + 1 ;else v93=v101[2 + 1 ];end elseif (v102<=79) then if (v102<=77) then if (v99[v101[3 -1 ]]<v99[v101[442 -(145 + 293) ]]) then v93=v93 + 1 ;else v93=v101[3];end elseif (v102==78) then v99[v101[2]][v99[v101[3]]]=v101[4];else do return v99[v101[2]]();end end elseif (v102<=81) then if (v102>(510 -(44 + 386))) then v99[v101[2]]=v99[v101[1 + 2 ]]/v101[4] ;else local v293=v101[2];do return v99[v293](v21(v99,v293 + 1 + 0 ,v101[3]));end end elseif (v102>(1568 -(998 + 488))) then if (v99[v101[2]]==v101[4]) then v93=v93 + 1 ;else v93=v101[839 -(660 + 176) ];end else local v294=0;local v295;local v296;local v297;while true do if (v294==1) then v297=0;for v489=v295,v101[4] do local v490=0;while true do if (v490==0) then v297=v297 + 1 ;v99[v489]=v296[v297];break;end end end break;end if (0==v294) then v295=v101[1 + 1 ];v296={v99[v295](v21(v99,v295 + 1 ,v94))};v294=1;end end end elseif (v102<=97) then if (v102<=90) then if (v102<=86) then if (v102<=84) then local v149=0;local v150;local v151;local v152;local v153;while true do if (0==v149) then v150=v101[2 + 0 ];v151,v152=v92(v99[v150](v99[v150 + 1 ]));v149=1;end if (v149==2) then for v418=v150,v94 do local v419=0;while true do if (v419==0) then v153=v153 + 1 ;v99[v418]=v151[v153];break;end end end break;end if (v149==1) then v94=(v152 + v150) -1 ;v153=0;v149=2;end end elseif (v102>85) then v99[v101[774 -(201 + 571) ]]=v99[v101[3]][v101[4]];else local v300=0;local v301;local v302;while true do if (v300==0) then v301=v101[2];v302=v99[v101[3]];v300=1;end if (v300==1) then v99[v301 + 1 ]=v302;v99[v301]=v302[v101[4]];break;end end end elseif (v102<=88) then if (v102==87) then local v303=0;local v304;while true do if (v303==0) then v304=v101[2];v99[v304](v21(v99,v304 + (1139 -(116 + 1022)) ,v101[3]));break;end end else v99[v101[2]]=v99[v101[205 -(14 + 188) ]][v101[4]];end elseif (v102>89) then for v388=v101[2],v101[3] do v99[v388]=nil;end else v93=v101[3];end elseif (v102<=93) then if (v102<=91) then v99[v101[2]]=v99[v101[3]]%v99[v101[16 -12 ]] ;elseif (v102>(767 -(534 + 141))) then v99[v101[2]]=v40(v90[v101[3]],nil,v74);else local v309=0;local v310;while true do if (v309==0) then v310=v101[2 + 0 ];v99[v310]=v99[v310](v21(v99,v310 + 1 ,v94));break;end end end elseif (v102<=95) then if (v102==(38 + 56)) then if (v99[v101[2]]~=v99[v101[4 + 0 ]]) then v93=v93 + 1 + 0 ;else v93=v101[3];end else local v311=v101[2];v99[v311]=v99[v311](v21(v99,v311 + 1 ,v101[6 -3 ]));end elseif (v102==(152 -56)) then local v313=v101[2];v99[v313]=v99[v313]();else local v315=v101[2];local v316=v99[v315];local v317=v101[8 -5 ];for v390=1,v317 do v316[v390]=v99[v315 + v390 ];end end elseif (v102<=104) then if (v102<=100) then if (v102<=(357 -259)) then local v155=v101[3];local v156=v99[v155];for v162=v155 + 1 ,v101[4] do v156=v156   .. v99[v162] ;end v99[v101[2 + 0 ]]=v156;elseif (v102>99) then if  not v99[v101[2]] then v93=v93 + 1 ;else v93=v101[3];end else local v318=0;local v319;while true do if (v318==0) then v319=v101[2];do return v21(v99,v319,v94);end break;end end end elseif (v102<=102) then if (v102==101) then local v320=0;local v321;while true do if (v320==0) then v321=v101[2];v99[v321](v21(v99,v321 + 1 ,v94));break;end end else local v322=0;local v323;local v324;local v325;while true do if (2==v322) then if (v324>0) then if (v325<=v99[v323 + 1 ]) then local v518=0;while true do if (v518==0) then v93=v101[862 -(814 + 45) ];v99[v323 + (7 -4) ]=v325;break;end end end elseif (v325>=v99[v323 + 1 ]) then v93=v101[6 -3 ];v99[v323 + 3 ]=v325;end break;end if (v322==0) then v323=v101[2];v324=v99[v323 + (7 -5) ];v322=1;end if (v322==1) then v325=v99[v323] + v324 ;v99[v323]=v325;v322=2;end end end elseif (v102==103) then local v326=0;local v327;while true do if (v326==0) then v327=v101[2];v99[v327]=v99[v327](v99[v327 + 1 ]);break;end end else v99[v101[2]][v99[v101[3]]]=v101[4];end elseif (v102<=107) then if (v102<=105) then local v158=0;local v159;local v160;local v161;while true do if (v158==0) then v159=v101[2];v160=v99[v159 + 2 ];v158=1;end if (v158==2) then if (v160>0) then if (v161<=v99[v159 + 1 + 0 ]) then v93=v101[3];v99[v159 + 3 ]=v161;end elseif (v161>=v99[v159 + 1 ]) then v93=v101[3];v99[v159 + 3 ]=v161;end break;end if (v158==1) then v161=v99[v159] + v160 ;v99[v159]=v161;v158=2;end end elseif (v102==106) then do return v99[v101[2]]();end else local v330=0;local v331;while true do if (0==v330) then v331=v101[2];v99[v331]=v99[v331](v21(v99,v331 + 1 + 0 ,v94));break;end end end elseif (v102<=109) then if (v102==108) then v99[v101[2]]=v99[v101[7 -4 ]];else local v334=v101[2];do return v99[v334](v21(v99,v334 + (3 -2) ,v101[870 -(550 + 317) ]));end end elseif (v102>110) then local v335=v101[1 + 1 ];local v336=v99[v335];local v337=v101[3];for v396=1,v337 do v336[v396]=v99[v335 + v396 ];end else local v338=0;local v339;local v340;while true do if (v338==1) then for v491=v339 + (886 -(261 + 624)) ,v94 do v15(v340,v99[v491]);end break;end if (v338==0) then v339=v101[2];v340=v99[v339];v338=1;end end end v93=v93 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
